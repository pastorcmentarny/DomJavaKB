
buildscript {
    ext {
        kafkaVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:6.0.2'
    }
}

plugins {
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'idea' //allows clean intellij idea projects from gradle
    id 'org.owasp.dependencycheck'
}

project.ext {
    //All non-gradle (extra )properties must be defined through the "ext" namespace.
    // Once defined, it is available directly on the owning object
    gradleDir = "${project(':').rootDir}/gradle"
}

ext {
    springVersion = "3.1.5"
    lombokVersion = "1.18.30"
    mockitoVersion = "4.2.0"
    junitVersion = "5.8.2"
}


apply from: "$gradleDir/dependecies.gradle"
apply from: "$gradleDir/tasks.gradle/"

group = 'dms.pastor'
version = '5'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    options.encoding = 'UTF-8' //to ensure that I always use UTF-8 in project
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    options.encoding = 'UTF-8' //to ensure that I always use UTF-8 in project
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// ./gradlew dependencyCheckAnalyze

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mail:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web-services:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mustache:${springVersion}"
    implementation "org.springframework.retry:spring-retry:1.3.1"
    implementation "ch.qos.logback:logback-classic:1.2.10"
    implementation "com.github.ben-manes.caffeine:caffeine:3.0.5"
    developmentOnly "org.springframework.boot:spring-boot-devtools:${springVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springVersion}") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation "org.junit.jupiter:junit-jupiter:${  junitVersion}"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.assertj:assertj-core:3.22.0"
}

test {
    useJUnitPlatform()
}


