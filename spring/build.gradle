buildscript {
    ext {
        kafkaVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:6.0.2'
    }
}

plugins {
    id 'java'
    id 'idea' //allows clean intellij idea projects from gradle
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.owasp.dependencycheck'
}

project.ext {
    //All non-gradle (extra )properties must be defined through the "ext" namespace.
    // Once defined, it is available directly on the owning object
    gradleDir = "${project(':').rootDir}/gradle"
}

ext {
    springVersion = "3.2.5"
    lombokVersion = "1.18.30"
    mockitoVersion = "4.2.0"
    junitVersion = "5.8.2"
}


apply from: "$gradleDir/dependecies.gradle"
apply from: "$gradleDir/tasks.gradle/"

group = 'dms.pastor'
version = '5'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    options.encoding = 'UTF-8' //to ensure that I always use UTF-8 in project
}

compileTestJava {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    options.encoding = 'UTF-8' //to ensure that I always use UTF-8 in project
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
}

repositories {
    mavenCentral()
}

// ./gradlew dependencyCheckAnalyze

dependencies {
    implementation(
            "org.springframework.boot:spring-boot-starter-actuator:${springVersion}",
            "org.springframework.boot:spring-boot-starter-mail:${springVersion}",
            "org.springframework.boot:spring-boot-starter-thymeleaf:${springVersion}",
            "org.springframework.boot:spring-boot-starter-actuator:${springVersion}",
            "org.springframework.boot:spring-boot-starter-mail:${springVersion}",
            "org.springframework.boot:spring-boot-starter-thymeleaf:${springVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springVersion}",
            "org.springframework.boot:spring-boot-starter-web-services:${springVersion}",
            "org.springframework.boot:spring-boot-starter-cache:${springVersion}",
            "org.springframework.boot:spring-boot-starter-aop:${springVersion}",
            "org.springframework.boot:spring-boot-starter-mustache:${springVersion}",
            "org.springframework.retry:spring-retry:2.0.5",
            "ch.qos.logback:logback-classic:1.5.6",
            "com.github.ben-manes.caffeine:caffeine:3.1.8",
    )

    developmentOnly "org.springframework.boot:spring-boot-devtools:${springVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test:${springVersion}",
            "org.junit.jupiter:junit-jupiter:${junitVersion}",
            "org.hamcrest:hamcrest-all:1.3",
            "org.mockito:mockito-core:${mockitoVersion}",
            "org.mockito:mockito-junit-jupiter:${mockitoVersion}",
            "org.assertj:assertj-core:3.25.3"
    )

}

test {
    useJUnitPlatform()
}
